################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

name: "Build&Push Docker Image"
on:
  workflow_dispatch:
  push:
    branches:
      - 'release-*'
    tags:
      - 'release-*'
  pull_request:
    branches:
      - 'release-*'
env:
  AWS_ACCOUNT: 671293015970
jobs:
  build_image:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        AWS_REGION: ["us-west-2", "us-east-1", "eu-central-1", "af-south-1", "ap-southeast-2"]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Operator Version
        run: |
          OPERATOR_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "OPERATOR_VERSION=$OPERATOR_VERSION" >> $GITHUB_ENV
          echo "Operator version: ${OPERATOR_VERSION}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ matrix.AWS_REGION }}

      - name: Docker auth
        run: |
          aws ecr get-login-password --region ${{ matrix.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ matrix.AWS_REGION }}.amazonaws.com

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ matrix.AWS_REGION }}.amazonaws.com/flink-kubernetes-operator
          tags: |
            type=raw,value=${{ env.OPERATOR_VERSION }}
            type=sha,prefix=,format=short
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker images (supported platforms)
        uses: docker/bake-action@v1.7.0
        with:
          files: |
            .github/workflows/docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: bake-platform
          push: ${{ github.event_name != 'pull_request' }}
